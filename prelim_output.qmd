---
title: "COM-B Food Waste Determinants"
format: html
editor: visual
---

```{r}
#| label:  call libraries
#| echo: false
#| include: false

library(table1)
library(qualtRics)
library(dplyr)
library(tibble)
library(knitr)
library(tidyr)
library(ggplot2)
library(psych)
library(corrplot)
library(censReg)
library(VGAM)
library(kableExtra)
library(broom)
library(AER)
library(patchwork)
```

```{r}
#| label: load and clean data
#| echo: false
#| include: false


wd <- list()
wd$data   <- "C:/MyData/paper 1/2_habit_comb_food/data/"
wd$output <- "C:MyData/paper 1/2_habit_comb_food/output/"

# LOAD RAW DATA
raw_data <- read_survey(paste0(wd$data, "Food_habit_COM-B-EN_16+October+2023_10.08.csv"))

# DATA CLEANING
{df <- raw_data %>% # filter no food handling, previews, non consent, failed att check
  filter(is.na(Q2_6) & Status == 0 & consent != 0 & (Q1...29 == 4 & (att != 4 | att != 5))) %>% 
  select(!c(Status, StartDate,EndDate,Progress,RecordedDate,ResponseId, DistributionChannel, Finished)) %>%
  rowid_to_column(., "ID")

df[,c("CAP_3", "CAP_5", "ref_mot_2_5")] <- 8 - df[,c("CAP_3", "CAP_5", "ref_mot_2_5")] # reverse score CAP3 and CAP5

# rename and labels socdem
df <- df %>% 
  rename(gender = Q3...98, age = Q2, adult = Q4...99, child = Q5...100, edu = Q6, employ = Q7,income = Q8...104)

df$gender <- factor(df$gender, levels=c(1,2,3,4), labels=c("Male", "Female", "Non-binary/third-gender", "Prefer not to say"))

df$income <- factor(df$income, levels=c(28:38,55), labels=c("Less than €1,000", "€1,000 - €1,999", "€2,000 - €2,999", "€3,000 - €3,999",  "€4,000 - €4,999","€5,000 - €5,999", "€6,000 - €6,999","€7,000 - €7,999", "€8,000 - €8,999", "€9,000 - €9,999", "€10,000 - €14,999",  "€15,000 or more"))

df$employ <- factor(df$employ, levels=c(10,11,9,12,13,14,15,16,7), labels=c("Employed full-time","Employed part-time","Self employed","Unemployed looking for work","Unemployed not looking for work", "Retired","Student","Inability to work","Other"))

df$edu <- factor(df$edu, levels=c(1,9,10,12,11,13,14,15), labels=c("No formal education","Primary education","Secondary education (GCSE)", "College or vocational qualifications (e.g. BTEC, NVQ)","A-levels or equivalent","Bachelor's degree or equivalent","Master's degree or equivalent","Doctorate or equivalent"))

label(df$age)   <- "Age"
label(df$gender)   <- "Gender"
label(df$edu)    <- "Highest education level"
label(df$income) <- "Net monthly household income"
label(df$employ)   <- "Employment status"
}
```

```{r}
#| label: FW setup
#| echo: false
#| include: false

##### FUNCTIONS FW CONVERSION 
{serving_spoon <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 25,
      {{col_name}} == 2 ~ 75,
      {{col_name}} == 3 ~ 150,
      {{col_name}} == 4 ~ 250,
      {{col_name}} == 5 ~ 350,
      TRUE ~ {{col_name}}
    ))
}

fruit_piece <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 25,
      {{col_name}} == 2 ~ 50,
      {{col_name}} == 3 ~ 100,
      {{col_name}} == 4 ~ 300,
      {{col_name}} == 5 ~ 500,
      TRUE ~ {{col_name}}
    ))
}

portion <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 75,
      {{col_name}} == 2 ~ 150,
      {{col_name}} == 3 ~ 375,
      {{col_name}} == 4 ~ 675,
      {{col_name}} == 5 ~ 900,
      TRUE ~ {{col_name}}
    ))
}
sandwich_portion <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 10,
      {{col_name}} == 2 ~ 20,
      {{col_name}} == 3 ~ 50,
      {{col_name}} == 4 ~ 90,
      {{col_name}} == 5 ~ 120,
      TRUE ~ {{col_name}}
    ))
}

bread <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 18,
      {{col_name}} == 2 ~ 35,
      {{col_name}} == 3 ~ 400,
      {{col_name}} == 4 ~ 800,
      {{col_name}} == 5 ~ 1200,
      TRUE ~ {{col_name}}
    ))
}

egg <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 30,
      {{col_name}} == 2 ~ 60,
      {{col_name}} == 3 ~ 150,
      {{col_name}} == 4 ~ 270,
      {{col_name}} == 5 ~ 360,
      TRUE ~ {{col_name}}
    ))
}

dairy_portion <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 38,
      {{col_name}} == 2 ~ 150,
      {{col_name}} == 3 ~ 500,
      {{col_name}} == 4 ~ 1000,
      {{col_name}} == 5 ~ 2000,
      TRUE ~ {{col_name}}
    ))
}

sauce <- function(data, col_name){
  data %>% 
    mutate({{col_name}} := case_when(
      {{col_name}} == 1 ~ 10,
      {{col_name}} == 2 ~ 30,
      {{col_name}} == 3 ~ 90,
      {{col_name}} == 4 ~ 225,
      {{col_name}} == 5 ~ 675,
      TRUE ~ {{col_name}}
    ))
}

df <- df %>% 
  serving_spoon(Q14) %>% 
  serving_spoon(Q3...88) %>% 
  serving_spoon(Q5...90) %>% 
  fruit_piece(Q4...89) %>% 
  portion(Q8...91) %>% 
  sandwich_portion(Q9) %>% 
  bread(Q10) %>% 
  dairy_portion(Q12) %>% 
  egg(Q13) %>% 
  sauce(Q15)

df <- df %>% 
  mutate(fw_total = rowSums(select(., Q14:Q15), na.rm=TRUE))
}
```

Below is some preliminary analysis of the data acquired from the questionnaire of COM-B determinants, habits and generated food waste.

## Sample characteristics

```{r}
#| label: sample table
#| echo: false

table1(~ gender + age + adult + child + edu + employ + income + fw_total | UserLanguage, data=df, overall=c(left="Total"))
```

## Food waste descriptives

```{r}
#| label: fw-dist
#| echo: false

#setup dataframes
fw_cat <- df %>% 
  select(Q1_28:Q1_31)

fw_summ <- fw_cat %>% 
  summarise(across(everything(), ~sum(. == 1, na.rm = TRUE))) %>% 
  arrange(desc(.))

fw_num <- df %>% 
  select(UserLanguage, Q14:Q15)

fw_num[is.na(fw_num)] <- 0

fw_na_mean <- fw_num %>% 
  group_by(UserLanguage) %>% 
  summarise(across(Q14:Q15, ~mean(., na.rm = TRUE))) %>%
  arrange(desc(.))

na_names <- c("DE" = "Austria",
              "EL" = "Greece",
              "EN-GB" = "United Kingdom",
              "ES-ES" = "Spain",
              "NL" = "The Netherlands",
              "SV" = "Sweden")

# Create labels
food_label <- data.frame(
  Variable = c("Q1_28", "Q1_17", "Q1_18", "Q1_19", "Q1_22", "Q1_23", "Q1_24", "Q1_26", "Q1_27", "Q1_29", "Q1_31"),
  Label = c(
    "Cooked Food", "Vegetables", "Fruit", "Potato",
    "Meat (substitute), fish", "Sandwich fillings", "Bread",
    "Dairy", "Eggs", "Condiments and sauces", "None of the above"))

amount_food_label <- data.frame(
  Variable = c("Q14", "Q3...88", "Q4...89", "Q5...90", "Q8...91", "Q9", "Q10", "Q12", "Q13", "Q15"),
  Label = c(
    "Cooked Food", "Vegetables", "Fruit", "Potato",
    "Meat (substitute), fish", "Sandwich fillings", "Bread",
    "Dairy", "Eggs", "Condiments and sauces"))

fw_summ_long <- pivot_longer(fw_summ, everything(), names_to = "Variable", values_to = "Value") %>% 
  left_join(food_label, by="Variable")

# Food waste distribution
hist1 <- ggplot(df, aes(x=fw_total))+
  geom_histogram(binwidth=60, color="#e9ecef", fill = "#8ab17d", position = 'identity') +
  labs(fill="", x = "Food Waste (g)", title = "Food waste distribution")

df$fw_total_log <- log(df$fw_total + 1)

hist2 <- ggplot(df, aes(x=fw_total_log))+
  geom_histogram(binwidth = .2, color="#e9ecef", fill = "#8ab17d", position = 'identity') +
  labs(fill="", x = "Food Waste (g)", title="Log transformed FW distribution")

hist1 + hist2 
```

I will move forward with the log-transformed data.

```{r}
#| label: fw-desc
#| echo: false


# mean waste by country
fw_mean_na <- df %>% 
  group_by(UserLanguage) %>% 
  summarise(mean_waste = mean(fw_total))

ggplot(fw_mean_na, aes(x = UserLanguage, y = mean_waste, fill = UserLanguage)) +
  geom_bar(stat = "identity") +
  scale_x_discrete(labels=na_names)+
  coord_flip()+
  labs(title = "Mean Grams of Wasted Food by Country", x = "Country", y = "Mean Grams of Waste") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill = "none") +
  scale_fill_manual(labels = na_names, values = c("#264653", "#2a9d8f", "#8ab17d", "#e9c46a", "#f4a261", "#e76f51"))


# Waste per country
fw_total_long_avg_na <- pivot_longer(fw_na_mean, Q14:Q15, names_to = "Variable", values_to = "Value") %>% 
  left_join(amount_food_label, by="Variable")


ggplot(data = fw_total_long_avg_na, aes(x = reorder(Label, Value), y = Value, fill = UserLanguage)) +
  geom_bar(stat = "identity", position="dodge") +
  labs(title = "Average Grams of Wasted Food by Category", x = "Food Category", y = "Average Grams of Waste") +
  theme_minimal() +
  coord_flip() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  guides(fill = guide_legend(title = "Country"))+
  scale_fill_manual(labels = na_names, values = c("#264653", "#2a9d8f", "#8ab17d", "#e9c46a", "#f4a261", "#e76f51"))
```

## COM-B Descriptives

```{r}
#| echo: false
#| label: COM-B descriptives
#| warning: false

{
df <- df %>% 
  mutate(psycap = rowMeans(select(.,CAP_1:CAP_5)))
df <- df %>% 
  mutate(phyopp = rowMeans(select(.,OPP_1:OPP_2)))
df <- df %>% 
  mutate(socopp = rowMeans(select(.,OPP_3:OPP_4)))
df <- df %>% 
  mutate(refmot = rowMeans(select(.,ref_mot_1_1:ref_mot_2_7)))
df <- df %>% 
  mutate(autmot = rowMeans(select(.,aut_mot_1_1:aut_mot_1_4)))
}

comb_overall <- df %>% 
  select(psycap:autmot)

comb_summary <- comb_overall %>% 
  describe() %>%
  select(mean, sd, median, n)

capalpha <- df %>% 
  select(CAP_1:CAP_5) %>% 
  alpha(na.rm=TRUE)

phyoppalp <- df %>% 
  select(OPP_1:OPP_2) %>% 
  alpha(na.rm=TRUE)

socoppalp <- df %>% 
  select(OPP_3:OPP_4) %>% 
  alpha(na.rm=TRUE)

refmotalp <- df %>% 
  select(ref_mot_1_1:ref_mot_2_7) %>% 
  alpha(na.rm=TRUE)

autmotalp <- df %>% 
  select(aut_mot_1_1:aut_mot_1_4) %>% 
  alpha(na.rm=TRUE) 

comb_summary$alpha <- c(capalpha$total$raw_alpha, phyoppalp$total$raw_alpha, socoppalp$total$raw_alpha, refmotalp$total$raw_alpha, autmotalp$total$raw_alpha)

rownames(comb_summary) <- c("Psychological Capability (5 items)", "Physical Opportunity (2 items)", "Social Opportunity (2 items)", "Reflective Motivation (15 items)", "Automatic Motivation (4 items)")

kable(comb_summary, digits=2, col.names = c("M", "SD", "Median", "n", "Cronbach's Alpha"))

comb_long <- df %>% 
  select(psycap:autmot, fw_total, UserLanguage) %>% 
  pivot_longer(
    cols=c(psycap, socopp, phyopp, refmot, autmot),
    names_to = "Component",
    values_to = "Rating"
  )

comb_labels <- c(
  "psycap" = "Psychological Capability",
  "socopp" = "Social Opportunity",
  "phyopp" = "Physical Opportunity",
  "refmot" = "Reflective Motivation",
  "autmot" = "Automatic Motivation"
)

ggplot(comb_long, aes(x = Rating, y = fw_total, color = Component)) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point() +
  labs(title = "Regression Lines for Predictors vs. fw_total",
       x = "Predictor Variable",
       y = "fw_total") +
  facet_wrap(~Component, labeller=labeller(Component = comb_labels))+
  guides(color="none")+
  theme_minimal()

```

## Scale reliability

```{r}
#| echo: false
#| label: combscale

capcor <- df %>% 
  select(CAP_1:CAP_4) %>% 
  cor(use="pairwise.complete.obs")
refmotcor <- df %>% 
  select(ref_mot_1_1:ref_mot_2_7) %>% 
  cor(use="pairwise.complete.obs")
autmotcor <- df %>% 
  select(aut_mot_1_1:aut_mot_1_4) %>% 
  cor(use="pairwise.complete.obs")

corrplot(refmotcor, method="color", addCoef.col = "black", diag=FALSE, type="lower", tl.srt=45, tl.col="black", number.cex = .7)
corrplot(capcor, method="color", addCoef.col = "black", diag=FALSE, type="lower", tl.srt=45, tl.col="black", number.cex = .7)
corrplot(autmotcor, method="color", addCoef.col = "black", diag=FALSE, type="lower", tl.srt=45, tl.col="black", number.cex = .7)

```

correlation for social opportunity items (injunctive and descriptive norm) is `r round(cor(df$OPP_3, df$OPP_4), digits=2)` and for physical opportunity (time and physical resources) `r round(cor(df$OPP_1, df$OPP_2), digits=2)`.

I will treat the physical opportunity and social opportunity items as separate constructs.

## Fitting Tobit model

```{r}
#| label: prelim analysis
#| echo: false

fit_lm_nonlog <- lm(fw_total ~ psycap + socopp + phyopp + refmot + autmot, data=df) 

fit_lm <- lm(fw_total_log ~ psycap + socopp + phyopp + refmot + autmot, data=df) 

fit_lm %>% 
#fw_comb_tobit <- vglm(fw_total ~ psycap + socopp + phyopp + refmot + autmot, tobit(), data=df) %>% 
  tidy() %>% 
  kable(digits = 2, caption = "Log-Linear model summary")

fit_lm_nonlog %>% 
#fw_comb_tobit <- vglm(fw_total ~ psycap + socopp + phyopp + refmot + autmot, tobit(), data=df) %>% 
  tidy() %>% 
  kable(digits = 2, caption = "Linear model summary")

filtered_df <- df %>% filter(fw_total_log != 0)
fit_lm_filter <- lm(fw_total_log ~ psycap + socopp + phyopp + refmot + autmot, data = filtered_df)
fit_lm_filter %>% 
#fw_comb_tobit <- vglm(fw_total ~ psycap + socopp + phyopp + refmot + autmot, tobit(), data=df) %>% 
  tidy() %>% 
  kable(digits = 2, caption = "Log-Linear model summary (excluding non-wasters)")

fit <- censReg(fw_total_log ~ psycap + socopp + phyopp + refmot + autmot, data=df)

kable(coef(summary(fit)), digits = 2, caption = "Tobit model summary (Log transformed)")

```
